# Create-Quiz-Game
Create a quiz game in c++
class Question {
    public:
    std :: string QuestionText;
    std :: vector<std::string> options;
    int correctOption;

    Question(const std::string& text,const std::vector<std::string>& opts,int correct)
      : QuestionText(text), options(opts),correctOption(correct) {}
};
class Quiz {
    public:
    std :: vector<Question> questions;
    int score;
    Quiz() : score (0) {}
    void addQuestion(const std::string& text,const std::vector<std ::string>& opts,int correct) {
        void displayQuestion(int index) const {
            const Question& q = questions[index];
            std::cout << "Question " << index + 1 << ":" << q. QuestionText << "\n";
            
            for (size_t i = 0; i < q.options.size(); ++i) {
                std::cout << "  " << i + 1 <<". " << q.options[i] << "\n";
            }
        }
        void startQuiz() {
            score = 0;
            for (size_t i = 0; i < questions.size(); ++i){
                displayQuestion(i);
                int userChice == getUserChoice();
                if (userChoice == questions[i].correctOption) {
                    std ::cout << "Incorrect! Correct option is: " << questions[i].correctOption <<"\a";
                }
            }
            std :: cout << "Quiz completed! Your score: " << score << "/" << questions.size() << "\n";
        }
        
        int getUserChoice() const {
            int choice;
            std::cout << "Enter your choice (1-" << questions[0].options.size() << ");
            std::cin >> choice;

            //validate user input
            while(choice < 1 || choice > static_cast<int>(questions[0].options.size())) {
            std::cout << "Invalid choice. Please enter a valid option:";
            std::cin >> choice;
            }

            return choice;
        }

        




